import{r as t,u as is,l as cs,R as Ne,j as e,W as Me,d as Ve,L as He,I as ds,H as J,T as v,e as H,f as K,M as hs,g as us,h as fs,i as ms,A as $e,k as be,m as _e,n as pe,o as Ce,p as Se,B as E,D as gs,C as De,F as R,q as ye,s as xs,t as qe,v as bs,w as ps,x as ve,S as Cs,V as ws,y as Ee,z as js,E as Ge,G as Qe,J as Ss,K as ys,N as Bs,O as ks,P as Ds,Q as Pe,U as p,X as vs,Y as Is,Z as Be,_ as z,$ as Ie,a0 as ae,a1 as oe,a2 as re,a3 as se,a4 as Fs,a5 as Ye,a6 as te,a7 as Rs,a8 as Ts,a9 as Ns,aa as ze,ab as we,ac as Ms,ad as je,ae as ie,af as Fe,ag as Re,ah as As,ai as Ls,aj as Xe,ak as Vs,al as Es,am as Ps,an as zs,ao as Ke,ap as Je,aq as ge,ar as Ze,as as xe,at as Os,au as Te,av as Us,aw as Ws,ax as Hs,ay as $s,az as _s,aA as qs,aB as Gs,aC as Qs,aD as Ys,aE as Xs,aF as Ks,aG as Js,aH as Zs}from"./vendor.js";import{_ as Y}from"./lodash.js";import{A as de}from"./ag-grid-react.js";import"./ag-grid-community.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function a(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=a(i);fetch(i.href,r)}})();const et="/assets/Titan.png";function ce(s=[]){return(Array.isArray(s)?s:[s]).map(a=>(delete a["Branch Info"],a))}function ke(s,o,a){return`${s==""?"Uncategorised":s} ${o==""?"Unversioned":o} ${String(a).split("\\").at(-1)}`}function st(s){return String(s).split("\\").at(-1)}const tt="http://localhost:4000",nt="40px";function me(s,o="info",a=3e3,n=!1){return{position:"top",variant:"solid",title:n?"Server Notification":"Client Notification",description:s,status:o,duration:a,isClosable:!0}}const es=t.createContext({socket:null,toast:null,config:null,updateConfig:s=>{},isDebug:!1,setIsDebug:s=>{},configurableRowData:[],setConfigurableRowData:s=>{},branchInfos:{},setBranchInfos:s=>{},branchTableGridRef:null,selectedBranches:[],setSelectedBranches:s=>{},showSelectedBranchesLog:!1,setShowSelectedBranchesLog:s=>{},isCommitMode:!1,setIsCommitMode:s=>{},selectedBranchStatuses:[],setSelectedBranchStatuses:s=>{},localChangesGridRef:null,untrackedChangesGridRef:null,showCommitView:!1,setShowCommitView:s=>{},sourceBranch:null,setSourceBranch:s=>{},branchOptions:[],issueNumber:{},setIssueNumber:s=>{},commitMessage:"",setCommitMessage:s=>{},selectedLocalChanges:[],setSelectedLocalChanges:s=>{},selectedUntrackedChanges:[],setSelectedUntrackedChanges:s=>{},socketPayload:null,setSocketPayload:s=>{},postCommitData:{},setPostCommitData:s=>{},logData:[],setLogData:s=>{}}),L=()=>t.useContext(es),lt=({children:s})=>{const[o,a]=t.useState(null),[n,i]=t.useState(null),r=is(),[l,d]=t.useState(localStorage.getItem("isDebug")==="true");t.useEffect(()=>{const x=cs(tt);return i(x),x.on("connect",()=>{x.emit("titan-config-get","fetch"),x.once("titan-config-get",V=>{a(V),r(me("Configurations Loaded","success",2e3))})}),x.on("notification",V=>{r(me(V.description,V.status,V.duration,!0))}),x.on("disconnect",()=>{r(me("Server Has Been Disconnected","warning",0,!0))}),x.on("reconnect",()=>{r(me("Server Has Been Reconnected","success",2e3,!0))}),()=>{x.disconnect()}},[]),t.useEffect(()=>{localStorage.setItem("isDebug",String(l))},[l]);const m=t.useCallback(x=>{x!=null&&(console.log("Saving config:",x),n==null||n.emit("titan-config-set",x))},[n]),c=t.useCallback(x=>{a(V=>{const q=x(V);return Y.isEqual(V,q)?V:(m(q),q)})},[a,m]),[u,g]=t.useState([]),[j,y]=t.useState({}),A=t.useRef(null),[b,C]=t.useState([]),[I,w]=t.useState(!1),[f,S]=t.useState(!1),[D,M]=t.useState([]),O=t.useRef(null),T=t.useRef(null),[F,U]=t.useState(!1),[$,k]=t.useState(null),P=t.useMemo(()=>u.filter(x=>x["Branch Folder"]&&x["Branch Version"]&&x["SVN Branch"]&&x["Branch Folder"]!==""&&x["Branch Version"]!==""&&x["SVN Branch"]!=="").map(x=>({value:x.id,label:ke(x["Branch Folder"],x["Branch Version"],x["SVN Branch"])})),[o,b,u]),[W,Q]=t.useState({}),[X,Z]=t.useState(""),[ee,ue]=t.useState([]),[B,h]=t.useState([]),[N,G]=t.useState(null),[fe,Ae]=t.useState({}),[le,_]=Ne.useState([]);return t.useEffect(()=>{M([]),U(!1)},[u]),t.useEffect(()=>{if(!f||!F)return;const x=setTimeout(()=>{var V;(V=document.getElementById("sectionCommit"))==null||V.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"})},100);return()=>clearTimeout(x)},[f,F]),t.useEffect(()=>{if(b.length<1||F){b.length<1&&S(!1);return}M([]),G(null),ce(b).forEach(x=>{console.debug("Emitting svn-status-single for branch:",x),n==null||n.emit("svn-status-single",{selectedBranch:x})})},[n,b,F]),t.useEffect(()=>{const x=()=>{U(!1)};return n==null||n.on("branch-refresh-unseen",x),()=>n==null?void 0:n.off("branch-refresh-unseen",x)},[n]),t.useEffect(()=>{const x=V=>{l&&console.debug("Received branch status data:",V),M(q=>[...q,V])};return n==null||n.on("branch-status-single",x),()=>n==null?void 0:n.off("branch-status-single",x)},[n]),t.useEffect(()=>{_([])},[b]),t.useEffect(()=>{le.length===0&&n&&C(x=>(x.length>0&&n.emit("svn-log-selected",{selectedBranches:b}),x))},[le,n]),t.useEffect(()=>{const x=V=>{console.debug("Received svn-log-result from socket in SectionBranchLog component in background"),_(q=>q.some(rs=>rs.id===V.id)?q:[...q,V])};return n==null||n.on("svn-log-result",x),()=>n==null?void 0:n.off("svn-log-result",x)},[n]),e.jsx(es.Provider,{value:{socket:n,toast:r,config:o,updateConfig:c,isDebug:l,setIsDebug:d,configurableRowData:u,setConfigurableRowData:g,branchInfos:j,setBranchInfos:y,branchTableGridRef:A,selectedBranches:b,setSelectedBranches:C,showSelectedBranchesLog:I,setShowSelectedBranchesLog:w,isCommitMode:f,setIsCommitMode:S,selectedBranchStatuses:D,setSelectedBranchStatuses:M,localChangesGridRef:O,untrackedChangesGridRef:T,showCommitView:F,setShowCommitView:U,sourceBranch:$,setSourceBranch:k,branchOptions:P,issueNumber:W,setIssueNumber:Q,commitMessage:X,setCommitMessage:Z,selectedLocalChanges:ee,setSelectedLocalChanges:ue,selectedUntrackedChanges:B,setSelectedUntrackedChanges:h,socketPayload:N,setSocketPayload:G,postCommitData:fe,setPostCommitData:Ae,logData:le,setLogData:_},children:s})};function he(){const{socket:s}=L(),o=t.useCallback(()=>{s==null||s.emit("titan-config-open",{})},[s]),a=t.useCallback((c,u,g,j)=>{s==null||s.emit("svn-update-single",{id:c,branch:u,version:g,folder:j})},[s]),n=t.useCallback((c,u,g,j)=>{s==null||s.emit("svn-info-single",{id:c,branch:u,version:g,folder:j})},[s]),i=t.useCallback(c=>{s==null||s.emit("svn-commit",c)},[s]),r=t.useCallback(c=>{s==null||s.emit("svn-files-revert",{filesToProcess:c})},[s]),l=t.useCallback(c=>{s==null||s.emit("svn-files-add-remove",{filesToProcess:c})},[s]),d=t.useCallback((c,u,g,j=null)=>{s==null||s.emit("trello-search-names-card",{key:c,token:u,query:g,limit:j})},[s]),m=t.useCallback((c,u,g,j)=>{s==null||s.emit("trello-update-card",{key:c,token:u,trelloData:g,commitResponses:j})},[s]);return{emitOpenConfig:o,emitUpdateSingle:a,emitInfoSingle:n,emitCommitPayload:i,emitFilesRevert:r,emitFilesAddRemove:l,emitTrelloCardNamesSearch:d,emitTrelloCardUpdate:m}}function ne(){const{toast:s}=L(),o=t.useCallback((a="",n="info",i=3e3,r=null)=>{const l=me(a,n,i);if(s)return s(l);if(r)return r(l)},[s]);return{toast:s,RaiseClientNotificaiton:o}}function at(){const{config:s,isDebug:o,setIsDebug:a}=L(),{emitOpenConfig:n}=he(),{RaiseClientNotificaiton:i}=ne(),r=t.useCallback(()=>{window.electron.checkForUpdates().then(d=>{console.debug("Check for updates result: ",d)}),window.electron.on("update-not-available",()=>{i("Titan is up to date","info",3e3),window.electron.removeAllListeners("update-not-available")})},[i]),l=t.useCallback(()=>{window.electron&&window.electron.getAppVersion().then(d=>{i(`Application Version: v${d}`,"info",2e3)})},[i]);return e.jsxs(Me,{my:5,spacingY:5,justify:"space-between",children:[e.jsxs(Ve,{alignItems:"center",children:[e.jsx(He,{onClick:l,children:e.jsx(ds,{src:et,alt:"Titan Logo",boxSize:"100px",mr:5,borderRadius:"full"})}),e.jsx(J,{as:"h2",size:"2xl",noOfLines:1,className:"animation-fadein-forward",children:"Welcome back"}),e.jsx(J,{as:"h2",size:"2xl",noOfLines:1,p:2,className:"animation-handwave",children:"ðŸ‘‹"})]}),e.jsxs(Ve,{alignItems:"center",columnGap:2,children:[e.jsx(v,{label:`Current Debug Mode: ${o?"on":"off"}`,hasArrow:!0,placement:"left",children:e.jsx(H,{"aria-label":"Toggle Debug Mode",colorScheme:"yellow",icon:o?e.jsx(K,{as:us}):e.jsx(K,{as:hs}),onClick:()=>a(d=>!d)})}),e.jsx(v,{label:"Open configuration file",hasArrow:!0,placement:"bottom-start",children:e.jsx(H,{"aria-label":"Open configuration file",colorScheme:"yellow",icon:e.jsx(K,{as:fs}),onClick:()=>n()})}),e.jsx(v,{label:"Check for updates",hasArrow:!0,placement:"bottom-start",isDisabled:!window.electron,children:e.jsx(H,{"aria-label":"Check for updates",colorScheme:"yellow",icon:e.jsx(K,{as:ms}),onClick:r,isDisabled:!window.electron})})]})]})}function ot({isAlertOpen:s,onCloseAlert:o,cancelRef:a,removeSelectedRows:n}){return e.jsx($e,{isOpen:s,leastDestructiveRef:a,onClose:o,children:e.jsx(be,{children:e.jsxs(_e,{children:[e.jsx(pe,{fontSize:"lg",fontWeight:"bold",children:"Delete Selected Rows"}),e.jsx(Ce,{children:"Are you sure you want to delete the selected rows? This action cannot be undone."}),e.jsxs(Se,{children:[e.jsx(E,{ref:a,onClick:o,children:"Cancel"}),e.jsx(E,{colorScheme:"red",onClick:n,ml:3,children:"Delete"})]})]})})})}function Oe(){const{innerWidth:s,innerHeight:o}=window;return{width:s,height:o}}function rt(){const[s,o]=t.useState(Oe());return t.useEffect(()=>{function a(){o(Oe())}return window.addEventListener("resize",a),()=>window.removeEventListener("resize",a)},[]),s}function it({rowData:s,onRowValueChanged:o}){const{config:a,branchTableGridRef:n,updateConfig:i,isDebug:r,selectedBranches:l,setSelectedBranches:d,setSelectedBranchStatuses:m,setShowCommitView:c}=L(),u=rt(),[g,j]=t.useState(u.height>768),y=t.useCallback(f=>{const S={...f,id:String(Date.now()),"Branch Info":"Hasn't been refreshed"};i(D=>({...D,branches:ce([...D.branches,S])}))},[i]),A=t.useCallback(f=>{var D,M,O,T;const S=(M=(D=n==null?void 0:n.current)==null?void 0:D.api)==null?void 0:M.getSelectedNodes().map(F=>F.data);if(r&&console.log("SectionBranches.jsx: onSelectionChanged - event",f),r&&console.log("SectionBranches.jsx: onSelectionChanged - selectedBranches",l),(f==null?void 0:f.source)=="rowDataChanged"){const F=l.map(U=>U.id);(T=(O=n==null?void 0:n.current)==null?void 0:O.api)==null||T.forEachNode(U=>{F.includes(U.data.id)&&U.setSelected(!0)});return}else["api"].includes(f==null?void 0:f.source)||(d(S),m([]),c(!1))},[r,n,l,d,c]),b=t.useCallback(f=>{const S=[];f.api.forEachNode(D=>S.push(D.data)),r&&console.debug("SectionBranches.jsx: onRowDragEnd - movedRowData",S),i(D=>({...D,branches:ce(S)}))},[i,r]),C=t.useCallback(f=>{const S=a==null?void 0:a.branchFolderColours[f.data["Branch Folder"]];return{backgroundColor:S?`${S}20`:"transparent"}},[a==null?void 0:a.branchFolderColours]),I=t.useMemo(()=>({resizable:!0,wrapText:!0,autoHeight:!0,filter:!0,suppressMovable:!0,editable:!0,wrapHeaderText:!0,autoHeaderHeight:!0}),[]),w=t.useMemo(()=>{const f=[{headerCheckboxSelection:!0,checkboxSelection:!0,headerCheckboxSelectionFilteredOnly:!0,width:20,resizable:!1,suppressMovable:!1,filter:!1,editable:!1,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},{headerName:"",width:60,resizable:!1,sortable:!1,filter:!1,editable:!1,cellRenderer:S=>e.jsx(v,{label:"Copy Row",hasArrow:!0,children:e.jsx(H,{colorScheme:"yellow","aria-label":"Copy Row",size:"sm",onClick:()=>y(S.data),icon:e.jsx(De,{})})})},{field:"Branch Folder",resizable:!1,width:130,valueFormatter:S=>S.value.toUpperCase()},{field:"Branch Version",resizable:!1,width:130},{field:"SVN Branch",flex:1},{field:"Branch Info",editable:!1,resizable:!1,width:200}];return g?[{field:"",rowDrag:!0,resizable:!1,filter:!1,suppressMovable:!1,editable:!1,width:20,cellRenderer:gs,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},...f]:f},[a,g,y]);return t.useEffect(()=>{j(u.height>768)},[u]),e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:g?"auto":"428px",width:"100%"},children:e.jsx(de,{ref:n,rowData:s,defaultColDef:I,columnDefs:w,stopEditingWhenCellsLoseFocus:!0,getRowStyle:C,onRowDragEnd:b,domLayout:g?"autoHeight":"normal",suppressRowClickSelection:!0,rowSelection:"multiple",rowMultiSelectWithClick:!0,animateRows:!0,rowDragManaged:!0,onSelectionChanged:A,onRowValueChanged:o,columnMenu:"new",editType:"fullRow",deltaRowDataMode:!0,getRowNodeId:f=>f.id,immutableData:!0,suppressFlash:!0,enableCellTextSelection:!0,ensureDomOrder:!0,pagination:!g,paginationAutoPageSize:!1,paginationPageSizeSelector:!1,paginationPageSize:10})})}function ct(){const{updateConfig:s,isDebug:o,socket:a,configurableRowData:n,setConfigurableRowData:i,branchInfos:r,config:l,setBranchInfos:d,setSelectedBranches:m,setSelectedBranchStatuses:c,showCommitView:u,setShowCommitView:g}=L(),[j,y]=t.useState([]),A=t.useCallback(b=>{o&&console.log("AG Grid: onRowValueChanged - event",b),o&&console.log("AG Grid: onRowValueChanged - rowDataBranches",j),s(C=>({...C,branches:ce(j)}))},[j,s,o]);return t.useEffect(()=>{const b=Y.debounce(()=>{const C=n.map(I=>({...I,"Branch Info":r[I.id]||"Hasn't been refreshed"}));y(I=>Y.isEqual(C,I)?I:C)},300);return b(),()=>b.cancel()},[n,r]),t.useEffect(()=>{i(b=>l&&l.branches&&!Y.isEqual(l.branches,b)?l.branches:b)},[l]),t.useEffect(()=>{const b=C=>{d(I=>{const w={...I,[C.id]:C.info};return console.debug("branch-info-single data received:",C),console.debug("branch-info-single newBranchInfos",w),m(f=>(f.find(D=>D.id===C.id)&&u&&(c([]),g(!1)),f)),w})};return a==null||a.on("branch-info-single",b),()=>a==null?void 0:a.off("branch-info-single")},[a,u]),{rowDataBranches:j,setRowDataBranches:y,onRowValueChanged:A}}function dt(){const{socket:s,updateConfig:o,isDebug:a,setShowSelectedBranchesLog:n,configurableRowData:i,branchTableGridRef:r,selectedBranches:l,setSelectedBranches:d,isCommitMode:m,setIsCommitMode:c,setSelectedBranchStatuses:u,setShowCommitView:g}=L(),{emitUpdateSingle:j,emitInfoSingle:y}=he(),{RaiseClientNotificaiton:A}=ne(),[b,C]=t.useState(!1),I=t.useRef(),w=()=>C(!1),{rowDataBranches:f,setRowDataBranches:S,onRowValueChanged:D}=ct(),[M,O]=t.useState(0),[T,F]=t.useState([]),U=t.useCallback(()=>{var B,h;a&&console.log("SectionBranches.jsx: clearSelection: START"),(h=(B=r==null?void 0:r.current)==null?void 0:B.api)==null||h.deselectAll(),d([]),c(!1)},[a,r,d]),$=t.useCallback(()=>{var h,N;const B=(N=(h=r==null?void 0:r.current)==null?void 0:h.api)==null?void 0:N.getSelectedNodes().map(G=>G.data);d(B),C(!0)},[r,d]),k=t.useCallback(()=>{const B={id:String(Date.now()),"Branch Folder":"","Branch Version":"","SVN Branch":"","Branch Info":""};o(h=>({...h,branches:ce([...h.branches,B])}))},[o]),P=t.useCallback(()=>{l.forEach(B=>{j(B.id,B["SVN Branch"],B["Branch Version"],B["Branch Folder"])})},[l,j]),W=t.useCallback(()=>{T.forEach(B=>{j(B.id,B["SVN Branch"],B["Branch Version"],B["Branch Folder"])})},[T,j]),Q=t.useCallback(()=>{const B=l.map(N=>N.id),h=f.filter(N=>!B.includes(N.id));console.log("SectionBranches.jsx: removeSelectedRows - updatedData",h),o(N=>({...N,branches:ce(h)})),U(),w()},[l,f,o]),X=t.useCallback(()=>{n(!0)},[]),Z=t.useCallback(()=>{S(B=>{const h=[...B];return l.forEach(N=>{const G=h.findIndex(fe=>fe.id===N.id);h[G]["Branch Info"]="Refreshing..."}),h}),l.forEach(B=>{y(B.id,B["SVN Branch"],B["Branch Version"],B["Branch Folder"])})},[l,y]),ee=t.useCallback(()=>{if(m){A("Unable to refresh branches while in commit mode","warning",0);return}A("Refreshing all branches. Please wait until this is done!","info",3e3);const B=Date.now();i.forEach(h=>{y(h.id,h["SVN Branch"],h["Branch Version"],h["Branch Folder"])}),O(B)},[i,y,A,m]),ue=t.useCallback(()=>{c(B=>!B),g(!1)},[c]);return t.useEffect(()=>{const B=f.filter(h=>String(h["Branch Info"]).toLowerCase().includes("behind"));F(B)},[f]),t.useEffect(()=>{const h=Date.now();if(i.length>0){h-M>3e5&&ee();const N=setInterval(()=>{ee()},3e5);return()=>clearInterval(N)}},[i,M,ee]),t.useEffect(()=>{const B=h=>{a&&console.debug("branch-success-single data received:",h),y(h.id,h.branch,h.version,h.folder)};return s==null||s.on("branch-success-single",B),()=>s==null?void 0:s.off("branch-success-single",B)},[a,s,y]),e.jsxs("div",{children:[e.jsxs(Me,{mb:4,justify:"space-between",children:[e.jsxs(R,{columnGap:2,children:[e.jsx(v,{label:"Requires at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsxs(E,{onClick:Z,leftIcon:e.jsx(ye,{}),colorScheme:"yellow",isDisabled:l.length<1,children:["Refresh ",l.length>0?`${l.length} Branch`:"",l.length>1?"es":""]})}),e.jsx(v,{label:"Requires at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsxs(E,{onClick:P,leftIcon:e.jsx(K,{as:xs}),colorScheme:"yellow",isDisabled:l.length<1,children:["Update ",l.length>0?`${l.length} Branch`:"",l.length>1?"es":""]})}),e.jsx(v,{label:"Requires at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsx(E,{onClick:ue,leftIcon:e.jsx(K,{as:qe}),colorScheme:"yellow",isDisabled:l.length<1,children:m?"Undo Commit":"Commit"})}),e.jsx(v,{label:"Requires at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsx(E,{onClick:X,leftIcon:e.jsx(bs,{}),colorScheme:"yellow",isDisabled:l.length<1,children:"View Logs"})})]}),e.jsx(R,{columnGap:2,children:e.jsx(v,{label:"No outdated branches to update",isDisabled:T.length>0,hasArrow:!0,children:e.jsx(E,{onClick:W,leftIcon:e.jsx(ps,{}),colorScheme:"yellow",isDisabled:T.length<1,children:"Update Outdated"})})})]}),e.jsx(it,{rowData:f,onRowValueChanged:D}),e.jsxs(R,{columnGap:2,mt:4,children:[e.jsx(v,{label:"Please select at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsxs(E,{onClick:U,leftIcon:e.jsx(ve,{}),colorScheme:"red",isDisabled:l.length<1,children:["Deselect ",l.length>0?`${l.length} Branch`:"",l.length>1?"es":""]})}),e.jsx(v,{label:"Please select at least 1 branch",isDisabled:l.length>0,hasArrow:!0,children:e.jsxs(E,{onClick:$,leftIcon:e.jsx(ve,{}),colorScheme:"red",isDisabled:l.length<1,children:["Delete ",l.length>0?`${l.length} Branch`:"",l.length>1?"es":""]})}),e.jsx(E,{onClick:k,leftIcon:e.jsx(Cs,{boxSize:8}),colorScheme:"green",children:"New Row"})]}),e.jsx(ot,{isAlertOpen:b,onCloseAlert:w,cancelRef:I,removeSelectedRows:Q})]})}function ss(s){const{data:o,onDiffResult:a}=s,n=async()=>{try{const i=await window.electron.openTortoiseSVNDiff({fullPath:o["Full Path"],branchFolder:o["Branch Folder"],branchVersion:o["Branch Version"]});a(i)}catch(i){a({success:!1,error:i.message})}};return e.jsx(H,{"aria-label":"Diff",size:"sm",icon:e.jsx(ws,{}),onClick:n,colorScheme:"yellow"})}function ts(){const{config:s}=L(),{emitTrelloCardNamesSearch:o,emitTrelloCardUpdate:a}=he(),n=s==null?void 0:s.trelloIntegration,i=(n==null?void 0:n.key)||null,r=(n==null?void 0:n.token)||null,l=i&&r&&i.trim()!==""&&r.trim()!==""&&i.toUpperCase()!=="TRELLO_API_KEY"&&r.toUpperCase!=="TRELLO_TOKEN";return{key:i,token:r,isTrelloIntegrationEnabled:l,emitTrelloCardNamesSearch:o,emitTrelloCardUpdate:a}}function ht({isModalOpen:s,closeModal:o}){const{socket:a,setIsCommitMode:n,setSelectedBranchStatuses:i,setShowCommitView:r,socketPayload:l,postCommitData:d,setPostCommitData:m}=L(),{emitUpdateSingle:c,emitCommitPayload:u}=he(),{key:g,token:j,isTrelloIntegrationEnabled:y,emitTrelloCardUpdate:A}=ts(),{RaiseClientNotificaiton:b}=ne(),[C,I]=t.useState([]),{onCopy:w,value:f,setValue:S,hasCopied:D}=Ee(""),{onCopy:M,value:O,setValue:T,hasCopied:F}=Ee(""),U=t.useCallback(h=>{h.success?b("TortoiseSVN diff opened successfully","success",3e3):b(`Error opening TortoiseSVN diff: ${JSON.stringify(h.error,null,4)}`,"error",0)},[b]),$=[{title:"Review",description:"Confirm SVN changes"},{title:"Commit",description:"Commit changes"},{title:"Complete",description:"Process Completed"}],{activeStep:k,setActiveStep:P}=js({index:1,count:$.length}),W=t.useMemo(()=>({resizable:!1,wrapText:!0,autoHeight:!0,filter:!0,suppressMovable:!0,editable:!1,wrapHeaderText:!0,autoHeaderHeight:!0}),[]),Q=t.useMemo(()=>[{field:"Branch Folder"},{field:"Branch Version",sort:"asc"},{field:"File Path",flex:1},{field:"Local Status",headerTooltip:"Working Copy"},{headerName:"Diff",filter:!1,sortable:!1,cellRenderer:ss,cellRendererParams:{onDiffResult:U},width:90}],[]),X=t.useCallback((h,N=!0)=>{const G="â€‹".repeat(7),fe=h.includes("MarkupSupport")?`\r
${G}`:`\r
`,le=C.sort((_,x)=>_["Branch Version"].localeCompare(x["Branch Version"])).map(_=>{const x=[];h.includes("BranchFolder")&&x.push(_["Branch Folder"]),h.includes("BranchVersion")&&x.push(_["Branch Version"]),h.includes("SVNBranch")&&x.push(_.branchPathFolder);let V=x.join(" ").trim();if(h.includes("IssueNumber")){const Le=_["Branch Folder"]===l.sourceBranch["Branch Folder"]?l.issueNumber:"XXXXXX";V+=` Issue [${Le}]`}const q=_.revision?_.revision:_.errorMessage||"Error";return V+=` Revision [${q}]`,V});return N?le.join(fe):le},[C,l]),Z=t.useCallback(h=>{const N=X(h);S(N)},[X,S]),ee=t.useCallback(()=>{P(h=>h-1)},[P]),ue=t.useCallback(()=>{if(d.type!=="trello"){b("Trello Autofill is not enabled for this commit","error");return}const h=d.data,N=X(["BranchFolder","BranchVersion","IssueNumber"],!1);A(g,j,h,N),b("Updating Trello card with commit information","info"),m(null)},[d,b,X]),B=t.useCallback(()=>{P(h=>h+1)},[P]);return t.useEffect(()=>{P(1),I([]),S(""),T("")},[s,I]),t.useEffect(()=>{!s||k!=0||(o(),P(1),I([]),S(""),T(""))},[k,s]),t.useEffect(()=>{!s||k!=2||u(l)},[k,s,u,l]),t.useEffect(()=>{!s||k!=3||(b("The commit process has been completed successfully","success",5e3),Z(["BranchFolder","BranchVersion","SVNBranch"]),T(l.commitMessage||""))},[b,k,s,Z]),t.useEffect(()=>{!s||k<=3||(w(),b("Updating selected branches! Please wait","info",1500),C.forEach(h=>{c(h.branchId,h["SVN Branch"],h["Branch Version"],h["Branch Folder"])}),n(!1),i([]),r(!1),o(),P(1))},[b,k,s,C,c]),t.useEffect(()=>{const h=N=>{I(G=>[...G,N])};return a==null||a.on("svn-commit-status-live",h),()=>a==null?void 0:a.off("svn-commit-status-live",h)},[a]),t.useEffect(()=>{if(k!=2)return;const h=setTimeout(()=>{C.length>0&&C[0].bulkCommitLength==C.length&&P(3)},3e3);return()=>clearTimeout(h)},[k,C]),t.useEffect(()=>{(D||F)&&b("Copied to Clipboard","success",1500)},[D,F,b]),!s||!l?e.jsx(e.Fragment,{}):e.jsxs(Ge,{isOpen:s,onClose:o,isCentered:!0,motionPreset:"slideInBottom",scrollBehavior:"inside",size:"xl",closeOnOverlayClick:k==1,children:[e.jsx(be,{}),e.jsxs(Qe,{maxH:"85%",maxW:"95%",children:[e.jsxs(pe,{display:"flex",justifyContent:"space-between",maxWidth:k==1?"94%":"100%",children:[e.jsx(J,{as:"h2",size:"lg",children:"Commit Selected Files"}),e.jsx(Ss,{index:k-1,mb:0,size:"sm",colorScheme:"yellow",children:$.map((h,N)=>e.jsxs(ys,{children:[e.jsx(Bs,{children:e.jsx(ks,{complete:e.jsx(Ds,{}),incomplete:e.jsx(Pe,{}),active:e.jsx(Pe,{})})}),e.jsx(p,{flexShrink:"0",children:e.jsx(vs,{children:h.title})}),e.jsx(Is,{})]},N))})]}),k==1?e.jsx(Be,{size:"lg",py:6}):e.jsx(e.Fragment,{}),e.jsx(Ce,{children:e.jsxs(p,{children:[k!=1?e.jsx(e.Fragment,{}):e.jsxs(p,{children:[e.jsxs(p,{mb:4,children:[e.jsx(z,{fontWeight:600,children:"Please confirm that the following information is correct before proceeding to commit your files:"}),e.jsxs(Ie,{spacing:3,children:[e.jsxs(ae,{children:[e.jsx(oe,{as:re,color:"yellow.500"}),"Source Branch: ",e.jsx(se,{children:ke(l.sourceBranch["Branch Folder"],l.sourceBranch["Branch Version"],l.sourceBranch["SVN Branch"])})]}),e.jsxs(ae,{children:[e.jsx(oe,{as:re,color:"yellow.500"}),"Issue Number: ",e.jsx(se,{children:l.issueNumber})]}),e.jsxs(ae,{children:[e.jsx(oe,{as:re,color:"yellow.500"}),"Commit Message: ",e.jsx(se,{children:l.commitMessage})]}),e.jsxs(ae,{children:[e.jsx(oe,{as:re,color:"yellow.500"}),"Example:"," ",e.jsxs(se,{children:["Issue ",l.issueNumber," (",l.sourceBranch["Branch Folder"]," ",l.sourceBranch["Branch Version"],"): ",l.commitMessage]})]})]})]}),e.jsx(p,{children:e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:"350px",width:"100%"},children:e.jsx(de,{rowData:l.filesToProcess,defaultColDef:W,columnDefs:Q,domLayout:"normal",columnMenu:"new",pagination:!0,paginationAutoPageSize:!0})})})]}),k!=2?e.jsx(e.Fragment,{}):e.jsxs(p,{children:[e.jsxs(z,{fontWeight:600,children:["Please wait while the files are being committed to the SVN repository.",e.jsx("br",{}),"Current live status of the commit process:"]}),e.jsx(p,{children:e.jsx(Ie,{spacing:3,children:C.map((h,N)=>e.jsxs(ae,{children:[e.jsx(oe,{as:h.errorMessage?Fs:re,color:h.errorMessage?"red.500":"yellow.500"}),h.branchString,":Â ",e.jsx(se,{children:h.errorMessage||h.revision})]},N))})})]}),k!=3?e.jsx(e.Fragment,{}):e.jsxs(p,{children:[e.jsx(p,{mb:4,children:e.jsxs(z,{fontWeight:600,children:["The commit process has been completed successfully.",e.jsx("br",{}),"Please find your revisions here for view and copy:"]})}),e.jsxs(R,{columnGap:10,alignItems:"center",children:[e.jsxs(p,{children:[e.jsx(J,{as:"h3",size:"md",children:"SVN Revisions"}),e.jsx(p,{children:e.jsx("pre",{style:{whiteSpace:"pre-wrap",wordWrap:"break-word"},children:f})})]}),e.jsx(p,{children:e.jsx(v,{hasArrow:!0,label:"Copy to clipboard",children:e.jsx(H,{"aria-label":"Copy To Clipboard",onClick:w,icon:e.jsx(De,{}),colorScheme:"yellow"})})})]}),e.jsxs(p,{my:4,children:[e.jsx(z,{fontWeight:600,children:"Modify the clipboard text to include..."}),e.jsx(Ye,{colorScheme:"yellow",defaultValue:["BranchFolder","BranchVersion"],onChange:Z,children:e.jsxs(Me,{children:[e.jsx(te,{value:"BranchFolder",children:"Branch Folder"}),e.jsx(te,{value:"BranchVersion",children:"Branch Version"}),e.jsx(te,{value:"SVNBranch",children:"SVN Branch"}),e.jsx(te,{value:"IssueNumber",children:"Issue Number"}),e.jsx(te,{value:"MarkupSupport",children:"Markup Support"})]})})]}),e.jsxs(R,{columnGap:10,alignItems:"center",children:[e.jsxs(p,{children:[e.jsx(z,{fontWeight:600,children:"Here is your SVN commit message for the source branch:"}),l.sourceBranch&&l.sourceBranch["Branch Folder"]&&l.sourceBranch["Branch Version"]?e.jsx(se,{children:`Issue ${l.issueNumber} (${l.sourceBranch["Branch Folder"]} ${l.sourceBranch["Branch Version"]}): ${O}`}):e.jsx(se,{children:"Source information is undefined. Please check that you have entered the correct details otherwise contact the developer!"})]}),e.jsx(v,{hasArrow:!0,label:"Copy to clipboard",children:e.jsx(H,{"aria-label":"Copy To Clipboard",onClick:M,icon:e.jsx(De,{}),colorScheme:"yellow"})})]})]})]})}),e.jsx(Se,{children:e.jsxs(R,{flex:1,justifyContent:"space-between",children:[e.jsx(R,{columnGap:2,children:e.jsx(v,{hasArrow:!0,label:"Cannot undo the commit currently",isDisabled:k<2,children:e.jsx(E,{onClick:ee,mr:3,isDisabled:k>=2,children:k==1?"Cancel":"Previous"})})}),e.jsxs(R,{columnGap:2,children:[e.jsx(v,{hasArrow:!0,label:"Requires Trello Autofill",isDisabled:(d==null?void 0:d.type)==="trello"&&y,children:e.jsx(E,{colorScheme:"yellow",leftIcon:e.jsx(K,{as:Rs}),onClick:ue,isDisabled:k<3||(d==null?void 0:d.type)!="trello"||!y,children:"Update Card"})}),e.jsx(v,{hasArrow:!0,label:"Cannot undo the commit currently",isDisabled:k!=2,children:e.jsx(E,{colorScheme:"yellow",onClick:B,isDisabled:k==2,children:k==$.length?"Complete":"Next"})})]})]})})]})]})}function ut({fileUpdates:s}){return e.jsx(p,{children:Object.keys(s).length>0?e.jsxs(p,{children:[e.jsx(z,{mb:4,children:"Below are the list of files which have been changed on your machine but there exists a newer version of them in the repository:"}),e.jsx(p,{maxHeight:"200px",overflowY:"auto",children:e.jsxs(Ts,{children:[e.jsx(Ns,{children:e.jsxs(ze,{children:[e.jsx(we,{children:"Branch"}),e.jsx(we,{children:"Path"}),e.jsx(we,{children:e.jsx(v,{label:"Working Copy",hasArrow:!0,children:"Local Status"})}),e.jsx(we,{children:e.jsx(v,{label:"Repository",hasArrow:!0,children:"Remote Status"})})]})}),e.jsx(Ms,{children:Object.keys(s).map(o=>e.jsx(Ne.Fragment,{children:s[o].map((a,n)=>e.jsxs(ze,{children:[e.jsx(je,{children:o}),e.jsx(je,{children:a.pathDisplay}),e.jsx(je,{children:a.wcStatus}),e.jsx(je,{children:a.reposStatus})]},n))},o))})]})}),e.jsx(z,{mt:4,children:"If you wish to commit these files, please update the associated branches!"})]}):e.jsx(p,{children:e.jsx(z,{children:"Your selected branches do not contain any changed files for which a newer version exists in the repository."})})})}function ft({rowDataLocalChanges:s,setRowDataLocalChanges:o,defaultColDefsCommit:a}){const{localChangesGridRef:n,isDebug:i,selectedBranches:r,showCommitView:l,setSelectedLocalChanges:d,selectedLocalChanges:m}=L(),{emitFilesRevert:c}=he(),{RaiseClientNotificaiton:u}=ne(),[g,j]=t.useState(""),y=t.useCallback(()=>{c(m)},[c,m]),A=t.useCallback(w=>{j(w.target.value)},[j]),b=t.useCallback(w=>{var D,M,O,T;if(console.debug("PanelLocalChanges.jsx: onFileViewSelectionChanged - event",w),String(w==null?void 0:w.source).toLowerCase().includes("api"))return;let f=(M=(D=n==null?void 0:n.current)==null?void 0:D.api)==null?void 0:M.getSelectedNodes().map(F=>F.data);i&&console.debug("PanelLocalChanges.jsx: onFileViewSelectionChanged - selectedBranches",f);const S=f.filter(F=>F["Local Status"].toLowerCase()==="added");(T=(O=n==null?void 0:n.current)==null?void 0:O.api)==null||T.forEachNode(F=>{S.some($=>$["File Path"].includes(F.data["File Path"])&&$["File Path"]!==F.data["File Path"])&&F.data["Local Status"].toLowerCase()==="added"&&!F.isSelected()&&(F.setSelected(!0),f.push(F.data),console.debug("PanelLocalChanges.jsx (onFileViewSelectionChanged): Adding ancestor node: ",F))}),d(f)},[n,i,d]),C=t.useCallback(w=>{w.success?u("TortoiseSVN diff opened successfully","success",3e3):u(`Error opening TortoiseSVN diff: ${JSON.stringify(w.error,null,4)}`,"error",0)},[u]),I=t.useMemo(()=>[{headerCheckboxSelection:!0,checkboxSelection:!0,headerCheckboxSelectionFilteredOnly:!0,width:20,resizable:!1,suppressMovable:!1,filter:!1,editable:!1,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},{field:"Branch Folder"},{field:"Branch Version",sort:"asc",sortIndex:0},{field:"File Path",flex:1,sort:"asc",sortIndex:2},{field:"Local Status",headerTooltip:"Working Copy",sort:"asc",sortIndex:1},{headerName:"Diff",filter:!1,sortable:!1,resizable:!1,cellRenderer:ss,cellRendererParams:{onDiffResult:C},width:90}],[]);return t.useEffect(()=>{r.length<1||l||(j(""),o([]),d([]))},[r,l]),e.jsx(p,{children:s.length>0?e.jsxs(p,{children:[e.jsxs(R,{mb:4,alignItems:"center",children:[e.jsx(z,{mr:2,fontWeight:"600",whiteSpace:"nowrap",children:"Quick Filter:"}),e.jsx(ie,{placeholder:"Type to search...",onInput:A,width:"100%"})]}),e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:"480px",width:"100%"},children:e.jsx(de,{ref:n,rowData:s,defaultColDef:a,columnDefs:I,onSelectionChanged:b,quickFilterText:g,domLayout:"normal",rowSelection:"multiple",suppressRowClickSelection:!0,rowMultiSelectWithClick:!0,animateRows:!0,columnMenu:"new",enableCellTextSelection:!0,ensureDomOrder:!0,pagination:!0,paginationAutoPageSize:!0})}),e.jsx(R,{mt:4,columnGap:2,justifyContent:"flex-end",children:e.jsx(v,{label:"Requires you to select at least 1 file",hasArrow:!0,isDisabled:m.length>0,children:e.jsx(E,{onClick:y,colorScheme:"red",isDisabled:m.length<1,children:"Revert Selected"})})})]}):e.jsx(p,{children:e.jsx(z,{children:"Your selected branches do not contain any files to commit."})})})}function mt({rowDataUntrackedChanges:s,setRowDataUntrackedChanges:o,defaultColDefsCommit:a}){const{untrackedChangesGridRef:n,selectedUntrackedChanges:i,setSelectedUntrackedChanges:r,isDebug:l,selectedBranches:d,showCommitView:m}=L(),{emitFilesAddRemove:c,emitFilesRevert:u}=he(),[g,j]=t.useState(""),y=t.useCallback(w=>{j(w.target.value)},[j]),A=t.useCallback(()=>{var f,S;const w=(S=(f=n==null?void 0:n.current)==null?void 0:f.api)==null?void 0:S.getSelectedNodes().map(D=>D.data);l&&console.debug("PanelUntrackedChanges.jsx (onUnseenFilesSelectionChanged): selectedBranches",w),r(w)},[n,l]),b=t.useCallback(()=>{c(i)},[c,i]),C=t.useCallback(()=>{u(i)},[u,i]),I=t.useMemo(()=>[{headerCheckboxSelection:!0,checkboxSelection:!0,headerCheckboxSelectionFilteredOnly:!0,width:20,resizable:!1,suppressMovable:!1,filter:!1,editable:!1,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},{field:"Branch Folder"},{field:"Branch Version",sort:"asc",sortIndex:0},{field:"File Path",flex:1,sort:"asc",sortIndex:1},{field:"Local Status",headerTooltip:"Working Copy"}],[]);return t.useEffect(()=>{d.length<1||m||(j(""),o([]),r([]))},[d,m]),e.jsx(p,{children:s.length>0?e.jsxs(p,{children:[e.jsx(z,{mb:4,children:"Below are the list of files which are either unversioned or missing in the repository:"}),e.jsxs(R,{mb:4,alignItems:"center",children:[e.jsx(z,{mr:2,fontWeight:"600",whiteSpace:"nowrap",children:"Quick Filter:"}),e.jsx(ie,{placeholder:"Type to search...",onInput:y,width:"100%"})]}),e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:"390px",width:"100%"},children:e.jsx(de,{ref:n,rowData:s,defaultColDef:a,columnDefs:I,onSelectionChanged:A,quickFilterText:g,domLayout:"normal",rowSelection:"multiple",rowMultiSelectWithClick:!0,animateRows:!0,columnMenu:"new",enableCellTextSelection:!0,ensureDomOrder:!0,pagination:!0,paginationAutoPageSize:!0})}),e.jsxs(R,{mt:4,columnGap:2,justifyContent:"flex-end",children:[e.jsx(v,{label:"Requires you to select at least 1 file",hasArrow:!0,isDisabled:i.length>0,children:e.jsxs(E,{onClick:b,colorScheme:"green",isDisabled:i.length<1,children:["Add/Remove ",i.length," File",i.length>1?"s":""]})}),e.jsx(v,{label:"Requires you to select at least 1 file",hasArrow:!0,isDisabled:i.length>0,children:e.jsxs(E,{onClick:C,colorScheme:"red",isDisabled:i.length<1,children:["Revert ",i.length," File",i.length>1?"s":""]})})]})]}):e.jsx(p,{children:e.jsx(z,{children:"Your selected branches do not contain any unversioned or missing files."})})})}function Ue({branchFolder:s}){const{issueNumber:o,setIssueNumber:a,selectedBranches:n}=L(),i=r=>{const l=String(r.target.value).trim();/^\d*$/.test(l)&&a(d=>({...d,[s]:l}))};return e.jsxs(Fe,{isRequired:s?n==null?void 0:n.map(r=>r["Branch Folder"]).includes(s):!0,children:[e.jsx(Re,{children:s?`Issue Number For ${s}`:"Issue Number"}),e.jsx(ie,{value:o[s],onChange:i,placeholder:"Enter number"})]},s)}function gt(){const{config:s}=L();return s&&s.commitOptions?s.commitOptions:null}function ns(){const{configurableRowData:s}=L(),o=t.useCallback(i=>s&&s.length>0?s.find(r=>r.id==i)["Branch Folder"]:"",[s]),a=t.useCallback(i=>s&&s.length>0?s.find(r=>r.id==i)["Branch Version"]:"",[s]),n=t.useCallback(i=>s&&s.length>0?s.find(r=>r.id==i)["SVN Branch"]:"",[s]);return{getBranchFolderById:o,getBranchVersionById:a,getSvnBranchById:n}}function xt({openMessageAutoFillModal:s}){const{sourceBranch:o,setSourceBranch:a,branchOptions:n,setIssueNumber:i,commitMessage:r,setCommitMessage:l,isCommitMode:d,selectedBranches:m}=L(),c=gt(),{getBranchFolderById:u}=ns(),g=t.useCallback(y=>{a(y)},[a]),j=t.useCallback(y=>{l(String(y.target.value).replace(/["`]/g,"'"))},[l]);return t.useEffect(()=>{d&&(a(null),i({}))},[d]),t.useEffect(()=>{c!=null&&c.reusePreviousCommitMessage||l("")},[c==null?void 0:c.reusePreviousCommitMessage,l,d]),t.useEffect(()=>{i(y=>Object.fromEntries(Object.entries(y).filter(([A])=>m.some(b=>b["Branch Folder"]===A))))},[m]),e.jsx(p,{children:e.jsxs(R,{columnGap:3,children:[e.jsxs(p,{flexGrow:1,children:[e.jsxs(R,{columnGap:2,mb:2,children:[e.jsx(p,{width:"50%",children:e.jsxs(Fe,{isRequired:!0,children:[e.jsx(Re,{children:"Source Branch"}),e.jsx(As,{value:o,onChange:g,options:n,placeholder:"Enter source branch",selectedOptionStyle:"check",selectedOptionColorScheme:"yellow",isClearable:!0})]})}),e.jsx(R,{width:"50%",alignItems:"flex-end",columnGap:2,children:e.jsx(Ue,{branchFolder:o&&o.value?u(o.value):null})})]}),e.jsxs(R,{columnGap:2,height:"auto",children:[e.jsxs(Fe,{width:c!=null&&c.useIssuePerFolder?"50%":"100%",isRequired:!0,children:[e.jsx(Re,{children:"Commit Message"}),e.jsx(Ls,{placeholder:"Enter Commit Message",height:"76%",resize:"none",onInput:j,value:r})]}),c!=null&&c.useIssuePerFolder&&o&&o.value?e.jsx(R,{width:"50%",flexDir:"column",rowGap:2,children:m.length>0?[...new Set(m.filter(y=>y["Branch Folder"]!==u(o.value)).map(y=>y["Branch Folder"]))].map(y=>e.jsx(Ue,{branchFolder:y},y)):null}):c!=null&&c.useIssuePerFolder&&(!o||!o.value)?e.jsx(p,{width:"50%",textAlign:"center",m:"auto",children:e.jsx(z,{fontSize:"lg",fontWeight:"600",color:"yellow.500",children:"Please select source branch first!"})}):null]})]}),e.jsx(p,{pt:8,children:e.jsx(v,{label:"Auto Fill Message",hasArrow:!0,children:e.jsx(H,{colorScheme:"yellow","aria-label":"Auto Fill Message",size:"md",onClick:()=>s(),icon:e.jsx(Xe,{})})})})]})})}function bt({openCommitModal:s}){const{setShowCommitView:o,selectedLocalChanges:a,sourceBranch:n,issueNumber:i,commitMessage:r,setSocketPayload:l,configurableRowData:d}=L(),{RaiseClientNotificaiton:m}=ne(),c=t.useCallback(()=>{o(!1)},[o]),u=t.useCallback(()=>{if(!n||n.value===""){m("Please select the source branch to proceed!","error");return}if(!i||!r||i===""||r===""){m("Please provide the issue number and the commit message to proceed!","error");return}l({sourceBranch:d.find(g=>g.id==n.value),issueNumber:i,commitMessage:r,filesToProcess:a}),s()},[n,i,r,m,a,d]);return e.jsx(p,{children:e.jsxs(R,{columnGap:2,justifyContent:"center",children:[e.jsx(E,{onClick:c,leftIcon:e.jsx(ye,{}),colorScheme:"yellow",children:"Refresh Process"}),e.jsx(v,{label:"Select at least 1 file",hasArrow:!0,isDisabled:a.length>0,children:e.jsxs(E,{onClick:u,leftIcon:e.jsx(K,{as:qe}),colorScheme:"yellow",isDisabled:a.length<1,children:["Commit ",a.length>0?`${a.length} File`:"",a.length>1?"s":""]})})]})})}function pt(){const{selectedBranches:s,logData:o,setLogData:a}=L(),[n,i]=t.useState([]),[r,l]=t.useState(""),d=t.useCallback(u=>{l(u.target.value)},[l]),m=t.useCallback(()=>{a([])},[a]),c=o.length===s.length;return t.useEffect(()=>{if(o.length===0)return;const u=o.map(g=>g.logs).flat();i(g=>Y.isEqual(g,u)?g:u)},[o]),{rowDataLogs:n,quickFilterLogsText:r,setQuickFilterLogsText:l,onQuickFilterLogsInputChanged:d,refreshLogs:m,areLogsFetched:c}}function Ct({rowDataLogs:s,quickFilterLogsText:o,setAutoFillSelection:a=null,isAutofill:n=!1}){const i=t.useMemo(()=>({sortable:!0,resizable:!1,wrapText:!0,autoHeight:!0,filter:!0,suppressMovable:!0,editable:!1,wrapHeaderText:!0,autoHeaderHeight:!0}),[]),r=t.useMemo(()=>{const m=[{field:"revision",headerName:"Revision",sort:"desc",width:130},{field:"date",headerName:"Date",sortable:!1},{field:"branchFolder",headerName:"Branch Folder",width:135},{field:"branchVersion",headerName:"Branch Version",width:125},{field:"author",headerName:"Author"},{field:"message",headerName:"Message",flex:1}];return n?[{checkboxSelection:!0,width:20,resizable:!1,suppressMovable:!1,filter:!1,editable:!1,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},...m]:m},[n]),l=t.useRef(null),d=t.useCallback(()=>{var m,c;if(a){const u=(c=(m=l==null?void 0:l.current)==null?void 0:m.api)==null?void 0:c.getSelectedNodes().map(g=>g.data);a(u[0]||null)}},[a]);return e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:n?"90%":"85%",width:"100%"},children:e.jsx(de,{ref:l,rowData:s,defaultColDef:i,columnDefs:r,onSelectionChanged:d,quickFilterText:o,domLayout:"normal",columnMenu:"new",rowSelection:"single",suppressRowClickSelection:!n,animateRows:!1,immutableData:!0,suppressFlash:!0,enableCellTextSelection:!0,ensureDomOrder:!0,pagination:!0,paginationAutoPageSize:!0})})}function ls({setAutoFillSelection:s=!1,isAutofill:o=!1}){const{selectedBranches:a,logData:n}=L(),{rowDataLogs:i,quickFilterLogsText:r,onQuickFilterLogsInputChanged:l,refreshLogs:d,areLogsFetched:m}=pt();return m?e.jsxs(p,{h:"100%",children:[e.jsxs(R,{mb:4,width:"100%",alignItems:"center",columnGap:4,children:[e.jsxs(R,{alignItems:"center",width:"100%",children:[e.jsx(z,{mr:2,fontWeight:"600",whiteSpace:"nowrap",children:"Quick Filter:"}),e.jsx(ie,{placeholder:"Type to search...",onInput:l,width:"100%"})]}),e.jsx(p,{children:e.jsx(v,{label:"Refresh",hasArrow:!0,children:e.jsx(H,{onClick:d,icon:e.jsx(ye,{}),colorScheme:"yellow","aria-label":"Refresh"})})})]}),e.jsx(Ct,{rowDataLogs:i,quickFilterLogsText:r,setAutoFillSelection:s,isAutofill:o})]}):e.jsxs(p,{children:[e.jsxs(p,{mb:4,children:[e.jsx(z,{fontWeight:600,children:"Showing SVN Log for the following branches:"}),e.jsx(Ie,{spacing:3,children:a.map(c=>{const u=n.find(g=>g.id===c.id);return e.jsxs(ae,{display:"flex",alignItems:"center",children:[e.jsx(oe,{w:30,h:30,as:u?re:Vs,color:"yellow.500"}),ke(c["Branch Folder"],c["Branch Version"],c["SVN Branch"])]},c.branchId)})})]}),e.jsx(R,{justifyContent:"center",children:e.jsx(Es,{value:n.length/a.length*360,color:"yellow.300",size:"100px",children:e.jsxs(Ps,{children:[n.length," / ",a.length]})})})]})}function wt(s){const{data:o}=s,a=async()=>{window.open(o.url,"_blank")};return e.jsx(H,{"aria-label":"Diff",size:"sm",icon:e.jsx(zs,{}),onClick:a,colorScheme:"yellow"})}function jt({rowDataTrello:s,quickFilterTrelloText:o,setAutoFillSelection:a}){const n=t.useMemo(()=>({sortable:!0,resizable:!1,wrapText:!0,autoHeight:!0,filter:!0,suppressMovable:!0,editable:!1,wrapHeaderText:!0,autoHeaderHeight:!0}),[]),i=t.useMemo(()=>[{checkboxSelection:!0,width:20,resizable:!1,suppressMovable:!1,filter:!1,editable:!1,headerClass:"branch-table-header-cell",cellClass:"branch-table-body-cell"},{field:"name",headerName:"Name",flex:1},{field:"lastActivityDate",headerName:"Last Activity Date"},{field:"url",headerName:"Goto Trello",filter:!1,sortable:!1,resizable:!1,cellRenderer:wt,width:120}],[]),r=t.useRef(null),l=t.useCallback(()=>{var m,c;const d=(c=(m=r==null?void 0:r.current)==null?void 0:m.api)==null?void 0:c.getSelectedNodes().map(u=>u.data);a(d[0]||null)},[a]);return e.jsx("div",{className:"ag-theme-balham-dark compact",style:{height:"80%",width:"100%"},children:e.jsx(de,{ref:r,rowData:s,defaultColDef:n,columnDefs:i,onSelectionChanged:l,quickFilterText:o,domLayout:"normal",columnMenu:"new",rowSelection:"single",suppressRowClickSelection:!1,animateRows:!1,enableCellTextSelection:!0,pagination:!0,paginationAutoPageSize:!0})})}function St({setAutoFillSelection:s}){const{socket:o}=L(),{key:a,token:n,isTrelloIntegrationEnabled:i,emitTrelloCardNamesSearch:r}=ts(),[l,d]=t.useState(""),[m,c]=t.useState(""),[u,g]=t.useState([]),j=t.useCallback(Y.debounce(C=>{C.trim()!==""&&r(a,n,C)},250),[a,n,r]),y=t.useCallback(C=>{d(String(C.target.value).trim())},[d]),A=t.useCallback(()=>{l.trim()!==""&&r(a,n,l)},[l,a,n,r]),b=t.useCallback(C=>{c(C.target.value)},[]);return t.useEffect(()=>(j(l),()=>j.cancel()),[l,j]),t.useEffect(()=>{const C=I=>{g(I&&I.length>0?I:[])};return o==null||o.on("trello-result-search-names-card",C),()=>o==null?void 0:o.off("trello-result-search-names-card",C)},[o]),i?e.jsxs(p,{h:"100%",children:[e.jsxs(R,{mb:4,width:"100%",alignItems:"center",columnGap:4,children:[e.jsxs(R,{alignItems:"center",width:"100%",children:[e.jsx(z,{mr:2,fontWeight:"600",whiteSpace:"nowrap",children:"Trello Query:"}),e.jsx(ie,{placeholder:"Type to search...",onInput:y,width:"100%"})]}),e.jsx(p,{children:e.jsx(v,{label:"Resubmit Query",hasArrow:!0,children:e.jsx(H,{onClick:A,icon:e.jsx(ye,{}),colorScheme:"yellow","aria-label":"Resubmit"})})})]}),e.jsx(R,{mb:4,width:"100%",alignItems:"center",columnGap:4,children:e.jsxs(R,{alignItems:"center",width:"100%",children:[e.jsx(z,{mr:2,fontWeight:"600",whiteSpace:"nowrap",children:"Quick Filter:"}),e.jsx(ie,{placeholder:"Type to search...",onInput:b,width:"100%"})]})}),e.jsx(jt,{rowDataTrello:u,quickFilterTrelloText:m,setAutoFillSelection:s})]}):e.jsx(p,{h:"100%",p:4,children:e.jsxs(z,{fontSize:"lg",fontWeight:"600",color:"red.500",children:["You need to"," ",e.jsxs(He,{href:"https://help.merge.dev/en/articles/8757597-trello-how-do-i-link-my-account",isExternal:!0,color:"yellow.500",children:["set up Trello Integration ",e.jsx(Xe,{mx:"2px"})]})," ","in the configuration file to use this feature."]})})}function yt({isModalOpen:s,closeModal:o}){const{setSourceBranch:a,branchOptions:n,setIssueNumber:i,setCommitMessage:r,setPostCommitData:l}=L(),{getBranchFolderById:d}=ns(),[m,c]=t.useState(0),[u,g]=t.useState([null,null]),[j,y]=t.useState(!0),A=t.useCallback(w=>{c(w),g(w===0?f=>[f[0],null]:f=>[null,f[1]])},[c]),b=t.useCallback(w=>{g(f=>[w,...f.slice(1)])},[g]),C=t.useCallback(w=>{g(f=>[f[0],w])},[g]),I=t.useCallback(()=>{console.warn("Nothing has been developed for this button yet."),console.debug("Selected tab index:",m),console.debug("Selected autofill selection:",JSON.stringify(u,null,4));let w=u[m];if(m===0){const f=w.message,S=w.branchId,D=f.match(/\s*(Issue)*\s*(\d+)\s*/),M=D?D[2]:null,O=f.replace(/\s*(Issue)*\s*(\d+)?\s*(\([^\)]+\))*\s?:?\s*/,"");S&&a(n.find(T=>T.value===S)),M&&i(T=>({...T,[d(w.branchId)]:M})),O.trim()!==""&&r(O)}else{const f=w.name,S=f.match(/\s*(Issue)*\s*(\d+)\s*/),D=S?S[2]:null,M=f.replace(/\s*(Issue)*\s*(\d+)/,"");D&&i(O=>Object.fromEntries(Object.keys(O).map(T=>[T,D]))),M.trim()!==""&&r(M),l({type:"trello",data:w})}o()},[m,u,o]);return t.useEffect(()=>{y(!(u.length==2&&(u[0]||u[1])))},[u]),t.useEffect(()=>{g([null,null])},[s]),e.jsxs(Ge,{isOpen:s,onClose:o,isCentered:!0,motionPreset:"slideInBottom",scrollBehavior:"inside",size:"xl",closeOnOverlayClick:!0,children:[e.jsx(be,{}),e.jsxs(Qe,{maxH:"95%",maxW:"95%",children:[e.jsx(pe,{children:e.jsx(J,{as:"h2",size:"lg",children:"Autofill Commit Message"})}),e.jsx(Be,{size:"lg"}),e.jsx(Ce,{children:e.jsx(p,{height:"70vh",children:e.jsxs(Ke,{variant:"solid-rounded",colorScheme:"yellow",defaultIndex:0,isLazy:!0,h:"100%",onChange:w=>A(w),children:[e.jsxs(Je,{children:[e.jsx(ge,{children:"SVN Logs"}),e.jsx(ge,{children:"Trello"})]}),e.jsxs(Ze,{h:"90%",children:[e.jsx(xe,{px:0,pb:0,h:"100%",children:e.jsx(ls,{setAutoFillSelection:b,isAutofill:!0})}),e.jsx(xe,{px:0,pb:0,h:"100%",children:e.jsx(St,{setAutoFillSelection:C})})]})]})})}),e.jsxs(Se,{children:[e.jsx(E,{mr:3,onClick:()=>o(),children:"Cancel"}),e.jsx(v,{hasArrow:!0,label:"Please select exactly one row!",placement:"top-start",isDisabled:!j,children:e.jsx(E,{colorScheme:"yellow",onClick:I,isDisabled:j,children:"Select"})})]})]})]})}function Bt(){const{config:s,updateConfig:o}=L(),[a,n]=t.useState({}),i=t.useCallback((r,l)=>{n(d=>({...d,[r]:l}))},[n]);return t.useEffect(()=>{!s||Y.isEmpty(s)||(s.commitOptions?n(s.commitOptions):o(r=>({...r,commitOptions:{useIssuePerFolder:!1,reusePreviousCommitMessage:!1}})))},[s]),t.useEffect(()=>{Y.isEmpty(a)||o(r=>Y.isEqual(r.commitOptions,a)?r:{...r,commitOptions:a})},[a]),e.jsxs(p,{mb:4,children:[e.jsx(J,{as:"h6",size:"sm",children:"Commit Options"}),e.jsx(Ye,{colorScheme:"yellow",children:e.jsxs(Os,{direction:"row",spacing:4,mt:2,children:[e.jsx(te,{isChecked:a.useIssuePerFolder,onChange:r=>i("useIssuePerFolder",r.target.checked),children:e.jsx(v,{label:"This option is for users who would like to apply different issue numbers for different branch folders",hasArrow:!0,children:"Use 1 Issue Per Folder?"})}),e.jsx(te,{isChecked:a.reusePreviousCommitMessage,onChange:r=>i("reusePreviousCommitMessage",r.target.checked),children:e.jsx(v,{label:"Toggling this option will clear the commit message!",hasArrow:!0,children:"Reuse Previous Commit Message?"})})]})})]})}function kt(){const{isDebug:s,setIsCommitMode:o,selectedBranchStatuses:a,showCommitView:n,setShowCommitView:i,selectedBranches:r,configurableRowData:l}=L(),[d,m]=t.useState({}),[c,u]=t.useState([]),[g,j]=t.useState([]),{isOpen:y,onOpen:A,onClose:b}=Te(),{isOpen:C,onOpen:I,onClose:w}=Te(),f=t.useMemo(()=>({resizable:!0,wrapText:!0,autoHeight:!0,filter:!0,suppressMovable:!0,editable:!1,wrapHeaderText:!0,autoHeaderHeight:!0}),[]);t.useEffect(()=>{if(r.length<1||n){r.length<1&&o(!1);return}m({})},[r,n]),t.useEffect(()=>{s&&(console.debug("Branch Status Rows:",a),console.debug("Selected Rows:",r))},[s,a,r]),t.useEffect(()=>{a.length===r.length&&(a.forEach(T=>{let F=T.id,U=T.status.filesToCommit,$=T.status.filesToUpdate;const k=l.find(P=>P.id===F);if($.length>0){const P=ke(k["Branch Folder"],k["Branch Version"],k["SVN Branch"]);m(W=>({...W,[P]:[...W[P]||[],...$]}))}if(U.length>0){const P=U.map(W=>({branchId:F,"Branch Folder":k["Branch Folder"],"Branch Version":k["Branch Version"],"SVN Branch":k["SVN Branch"],"Full Path":W.path,"File Path":`${st(T.status.branch)}\\${W.pathDisplay}`,"Local Status":W.wcStatus}));u(W=>[...W,...P.filter(Q=>!["unversioned","missing"].includes(Q["Local Status"]))]),j(W=>[...W,...P.filter(Q=>["unversioned","missing"].includes(Q["Local Status"]))])}}),i(!0))},[a,r,l]);const S=Object.keys(d).length>0,D=c.length>0,M=g.length>0,O=S||D||M;return e.jsxs(p,{children:[e.jsx(Bt,{}),e.jsx(p,{mb:6,children:e.jsx(xt,{openMessageAutoFillModal:I})}),e.jsx(Us,{isLoaded:n&&O,startColor:"yelow.500",endColor:"yellow.500",children:e.jsxs(Ke,{variant:"solid-rounded",colorScheme:"yellow",defaultIndex:S?0:D?1:2,isLazy:!1,children:[e.jsxs(Je,{children:[e.jsx(ge,{isDisabled:!S,children:e.jsx(v,{label:"No files to update!",hasArrow:!0,isDisabled:S,children:"Files to Update"})}),e.jsx(ge,{isDisabled:!D,children:e.jsx(v,{label:"No files to commit!",hasArrow:!0,isDisabled:D,children:"Local Changes"})}),e.jsx(ge,{isDisabled:!M,children:e.jsx(v,{label:"No unversioned/missing files!",hasArrow:!0,isDisabled:M,children:"Untracked Changes"})})]}),e.jsxs(Ze,{children:[e.jsx(xe,{px:0,children:e.jsx(ut,{fileUpdates:d})}),e.jsx(xe,{px:0,children:e.jsx(ft,{rowDataLocalChanges:c,setRowDataLocalChanges:u,defaultColDefsCommit:f})}),e.jsx(xe,{px:0,children:e.jsx(mt,{rowDataUntrackedChanges:g,setRowDataUntrackedChanges:j,defaultColDefsCommit:f})})]})]})}),n&&!O?e.jsxs(z,{mt:4,className:"animation-pulse",fontWeight:600,textAlign:"center",children:["No changes have been spotted!",e.jsx("br",{}),"Please use the refresh button ðŸ‘‡ if you have recently made a change"]}):e.jsx(e.Fragment,{}),e.jsx(p,{mt:6,children:e.jsx(bt,{openCommitModal:A})}),e.jsx(ht,{isModalOpen:y,closeModal:b}),e.jsx(yt,{isModalOpen:C,closeModal:w})]})}function Dt(){const{showSelectedBranchesLog:s,setShowSelectedBranchesLog:o}=L();return e.jsxs(Ws,{isOpen:s,onClose:()=>o(!1),placement:"left",size:"full",children:[e.jsx(be,{}),e.jsxs(Hs,{children:[e.jsx(Be,{size:"lg"}),e.jsx(pe,{children:"Selected Branches: SVN Log"}),e.jsx(Ce,{children:e.jsx(p,{height:"100%",children:e.jsx(ls,{})})})]})]})}function vt(){const{toast:s,RaiseClientNotificaiton:o}=ne(),{isOpen:a,onOpen:n,onClose:i}=Te(),r=t.useRef(),[l,d]=t.useState(!1);t.useEffect(()=>{if(!window.electron){o("Electron context is not available. Updates cannot be checked.","warning",5e3);return}return window.electron.on("update-available",()=>{s.closeAll(),n()}),window.electron.on("update-error",u=>{o(`An error occurred while checking for updates: ${u}`,"error",5e3),d(!1)}),()=>{window.electron.removeAllListeners("update-available"),window.electron.removeAllListeners("update-error")}},[s,n]);const m=t.useCallback(()=>{i(),o("You may update the application later by manually triggering an update check or wait until Titan does this","info",5e3)},[i,o]),c=t.useCallback(()=>{if(l){o("Update is already in progress. Please wait.","info",5e3);return}window.electron?(d(!0),window.electron.downloadUpdate().catch(u=>{d(!1),o(`An error occurred while downloading the update: ${u}`,"error",5e3)}),window.electron.on("update-downloaded",()=>{o("Update has been downloaded successfully. Titan will now restart to apply the update.","info",5e3),window.electron.removeAllListeners("update-downloaded"),i()}),window.electron.on("update-not-available",()=>{o("Titan is up to date","info",3e3),window.electron.removeAllListeners("update-not-available"),d(!1),i()})):o("Cannot update Titan in a non-desktop application environment","error",5e3)},[l,o,d,i]);return e.jsx($e,{isOpen:a,leastDestructiveRef:r,onClose:i,motionPreset:"slideInBottom",closeOnOverlayClick:!l,children:e.jsx(be,{children:e.jsxs(_e,{children:[e.jsx(pe,{fontSize:"lg",fontWeight:"bold",children:"Update Available"}),l?e.jsx(e.Fragment,{}):e.jsx(Be,{}),e.jsx(Ce,{children:"A new version of Titan is available. Would you like to download and install the update?"}),e.jsxs(Se,{children:[e.jsx(E,{colorScheme:"red",ref:r,onClick:m,isDisabled:l,children:"Cancel"}),e.jsx(E,{colorScheme:"yellow",onClick:c,ml:3,isDisabled:l,children:"Confirm"})]})]})})})}function It(){if(!window.electron)return e.jsx(e.Fragment,{});const s=t.useCallback(()=>{window.electron.minimizeWindow()},[]),o=t.useCallback(()=>{window.electron.maximizeWindow()},[]),a=t.useCallback(()=>{window.electron.closeWindow()},[]);return e.jsx($s.header,{w:"100%",position:"fixed",bgColor:"#121212",className:"titanHead",zIndex:9999999,top:0,children:e.jsxs(R,{justifyContent:"space-between",alignItems:"center",p:2,position:"static",children:[e.jsx(J,{as:"h6",size:"sm",noOfLines:1,className:"animation-fadein-left-forward",children:"Titan"}),e.jsxs(R,{alignItems:"center",columnGap:2,flexWrap:"nowrap",wrap:"nowrap",children:[e.jsx(H,{"aria-label":"Minimize",size:"xs",icon:e.jsx(_s,{}),onClick:s,colorScheme:"gray",_hover:{bg:"#FAF089",color:"#1A202C"}}),e.jsx(H,{"aria-label":"Maximize",size:"xs",icon:e.jsx(qs,{}),onClick:o,colorScheme:"gray",_hover:{bg:"#FAF089",color:"#1A202C"}}),e.jsx(H,{"aria-label":"Close",size:"xs",icon:e.jsx(ve,{}),onClick:a,colorScheme:"gray",_hover:{bg:"#FEB2B2",color:"#1A202C"}})]})]})})}function Ft(){const{isCommitMode:s,selectedBranches:o,configurableRowData:a}=L(),{RaiseClientNotificaiton:n}=ne();return t.useEffect(()=>{if(window.electron)return window.electron.onAppClosing(()=>{n("App is closing, performing cleanup...","info",0),window.electron.closeWindow()}),()=>{window.electron.removeAppClosingListener()};console.warn("Electron specific logic is not available in browser mode.")},[]),e.jsxs(p,{className:"titanBody",children:[e.jsx(It,{}),e.jsxs(p,{p:10,children:[e.jsx(at,{}),e.jsx(vt,{}),e.jsxs(R,{rowGap:4,flexDirection:"column",children:[e.jsx(p,{children:e.jsx(dt,{})}),e.jsx(Gs,{in:s,animateOpacity:!0,children:e.jsxs(p,{id:"sectionCommit",children:[e.jsxs(J,{as:"h2",size:"lg",noOfLines:1,mb:4,className:"animation-pulse",children:["Committing ",o.length==a.length?"All":`${o.length}/${a.length}`," Branch",o.length==1?"":"es"]}),e.jsx(kt,{})]})})]}),e.jsx(Dt,{})]})]})}const{definePartsStyle:as,defineMultiStyleConfig:os}=Js(Zs.keys),Rt=as({overlay:{bg:"blackAlpha.900"},dialog:{bg:"gray.900",color:"white",boxShadow:"rgba(255, 255, 255, 0.07) 0px -20px 20px 20px"},header:{bg:"gray.900",color:"white",borderRadius:"20px",p:4},body:{p:4,color:"white"},footer:{bg:"gray.900",p:4,color:"white",borderRadius:"20px"}}),Tt=os({baseStyle:Rt}),Nt=as({overlay:{bg:"blackAlpha.900"},dialog:{mt:nt,bg:"gray.900",color:"white",boxShadow:"rgba(255, 255, 255, 0.07) 0px -20px 20px 20px"},header:{bg:"gray.900",color:"white",borderRadius:"20px",p:4},body:{p:4,color:"white"},footer:{bg:"gray.900",p:2,color:"white",borderRadius:"20px"}}),Mt=os({baseStyle:Nt}),At={initialColorMode:"dark",useSystemColorMode:!1},We=Qs({config:At,components:{Modal:Tt,Drawer:Mt}});Ys.createRoot(document.getElementById("root")).render(e.jsx(Ne.StrictMode,{children:e.jsxs(Xs,{theme:We,children:[e.jsx(Ks,{initialColorMode:We.config.initialColorMode}),e.jsx(lt,{children:e.jsx(Ft,{})})]})}));
